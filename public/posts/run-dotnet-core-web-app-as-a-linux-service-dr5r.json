{"date":1628005954,"cats":[0,1,2,3,4,8,13,14,15,48],"content":"<p>Publish a release of the App</p>\n<pre><code>dotnet publish -c Release -o publish2   --runtime linux-x64  --self-contained true  /p:PublishTrimmed=true  /p:PublishSingleFile=true</code></pre>\n\n<p>Upload the release to your server</p>\n<pre><code>sftp {user}@{host}:{remote_dir} &lt;&lt;&lt; $'put {local_file_path}'</code></pre>\n<p>The linux service : app.service</p><pre><code>[Unit]\nDescription=Long running service/daemon created from .NET worker template\n\n[Service]\n# will set the Current Working Directory (CWD). Worker service will have issues without this setting\nWorkingDirectory=/home/azureuser/publish2\n# systemd will run this executable to start the service\nExecStart=/home/azureuser/publish2/inventory\n# to query logs using journalctl, set a logical name here\nSyslogIdentifier=inventory\n\n# Use your username to keep things simple.\n# If you pick a different user, make sure dotnet and all permissions are set correctly to run the app\n# To update permissions, use 'chown yourusername -R /srv/Worker' to take ownership of the folder and files,\n#       Use 'chmod +x /srv/Worker/Worker' to allow execution of the executable file\nUser=azureuser\n\n# ensure the service restarts after crashing\nRestart=always\n# amount of time to wait before restarting the service                  \nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target</code></pre><p>Install the service:</p><pre><code>sudo cp app.service /etc/systemd/system/\nsudo systemctl daemon-reload\nsudo systemctl start app</code></pre>\n\n<p>Source example : https://swimburger.net/blog/dotnet/how-to-run-a-dotnet-core-console-app-as-a-service-using-systemd-on-linux</p>","title":"Run dotnet core web app as a linux service","slug":"run-dotnet-core-web-app-as-a-linux-service-dr5r"}